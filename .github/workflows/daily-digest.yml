name: Daily AI Podcast Digest

on:
  schedule:
    # Run daily at 6:00 AM Eastern (11:00 AM UTC)
    - cron: '0 11 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  process-podcasts:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
        
    - name: Install Ollama
      run: |
        curl -fsSL https://ollama.ai/install.sh | sh
        sudo systemctl start ollama
        
    - name: Cache Ollama models
      uses: actions/cache@v4
      with:
        path: ~/.ollama
        key: ollama-models-${{ runner.os }}
        restore-keys: |
          ollama-models-${{ runner.os }}
          
    - name: Pull Ollama model
      run: |
        ollama pull llama3.1:8b
        
    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create necessary directories
      run: |
        mkdir -p data/audio data/transcripts data/summaries data/embeddings logs
        
    - name: Run podcast processing pipeline
      run: |
        python -c "import sys; print('Python path:', sys.path)"
        python -c "import src; print('src module imported successfully')"
        python -c "from src.core.config import settings; print('Config loaded:', settings.email_enabled)"
        python github_actions_runner.py
      env:
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        SUBSCRIBER_EMAILS: ${{ secrets.SUBSCRIBER_EMAILS }}
        EMAIL_ENABLED: true
        DATABASE_URL: sqlite:///data/db.sqlite
        
    - name: Upload logs as artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: processing-logs
        path: logs/
        retention-days: 7 